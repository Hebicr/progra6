//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace progra6.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class progra6Entities : DbContext
    {
        public progra6Entities()
            : base("name=progra6Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Persona> Personas { get; set; }
        public virtual DbSet<user> users { get; set; }
    
        public virtual int getUserBylogin(string usuario, string password)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getUserBylogin", usuarioParameter, passwordParameter);
        }
    
        public virtual int sp_delete_personas(string iDN)
        {
            var iDNParameter = iDN != null ?
                new ObjectParameter("IDN", iDN) :
                new ObjectParameter("IDN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_personas", iDNParameter);
        }
    
        public virtual int sp_insert_personas(string iDN, string nombre, string apellido, string email, string fechaNacimiento)
        {
            var iDNParameter = iDN != null ?
                new ObjectParameter("IDN", iDN) :
                new ObjectParameter("IDN", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_personas", iDNParameter, nombreParameter, apellidoParameter, emailParameter, fechaNacimientoParameter);
        }
    
        public virtual ObjectResult<sp_select_personas_Result> sp_select_personas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_select_personas_Result>("sp_select_personas");
        }
    
        public virtual int sp_update_personas(string iDN, string nombre, string apellido, string email, string fechaNacimiento)
        {
            var iDNParameter = iDN != null ?
                new ObjectParameter("IDN", iDN) :
                new ObjectParameter("IDN", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_personas", iDNParameter, nombreParameter, apellidoParameter, emailParameter, fechaNacimientoParameter);
        }
    }
}
